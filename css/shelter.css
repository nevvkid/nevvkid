/*

  BASSCSS

  Part reset, part boilerplate, part framework, all minimal.

  BASSCSS is a small reset and collection of simple type and layout
  classes that can be used as the basis for any web project.
  Use it out of the box or as a base for a larger SASS project.


  Contents:
  1. Reset
  2. Typography
     a. Default Font Stack
     b. Base Type Scale
     c. Responsive Type Scale
     d. Utilities
  3. Layout
     a. Margins
     b. Padding
     c. Display
     d. Utilities


  Made with love by Jxnblk

*/
body, h1, h2, h3, h4, h5, h6, dl, ol, ul, p,
button, input, select, textarea {
  margin: 0; }

button, input, select, textarea {
  font-family: inherit;
  font-size: 100%; }

article, aside, details, figcaption, figure, footer, header, main, nav, section, summary {
  display: block; }

body {
  font-family: "Source Code Pro", Monaco, monospace;
  line-height: 1.5;
  font-weight: 400; }

h1, .h1 {
  font-size: 2rem;
  line-height: 1.25; }

h2, .h2 {
  font-size: 1.5rem;
  line-height: 1.25; }

h3, h4, h5, h6, dl, ol, ul, p, .p {
  font-size: 1.125rem; }

small, .small {
  font-size: .875rem; }

@media (min-width: 768px) {
  .responsive .h1, .responsive.h1 {
    font-size: 4rem; }
  .responsive .h2, .responsive.h2 {
    font-size: 2rem; }
  .responsive .p, .responsive.p {
    font-size: 1.25rem; }
  .responsive .small, .responsive.small {
    font-size: 1rem; } }
@media (min-width: 1024px) {
  .responsive .h1, .responsive.h1 {
    font-size: 6rem; }
  .responsive .h2, .responsive.h2 {
    font-size: 3rem; } }

strong, .bold {
  font-weight: bold; }

.regular {
  font-weight: normal; }

.caps {
  text-transform: uppercase;
  letter-spacing: .2em; }

.center {
  text-align: center; }

.right-align {
  text-align: right; }

.type-margins h1, .type-margins .h1 {
  margin-bottom: 1rem; }
.type-margins h2, .type-margins .h2 {
  margin-bottom: 1rem; }
.type-margins h3, .type-margins h4, .type-margins h5, .type-margins h6, .type-margins p, .type-margins dl, .type-margins ol, .type-margins ul {
  margin-bottom: 1rem; }

.m1 {
  margin: 1rem; }

.mt1 {
  margin-top: 1rem; }

.mr1 {
  margin-right: 1rem; }

.mb1 {
  margin-bottom: 1rem; }

.ml1 {
  margin-left: 1rem; }

.m2 {
  margin: 2rem; }

.mt2 {
  margin-top: 2rem; }

.mr2 {
  margin-right: 2rem; }

.mb2 {
  margin-bottom: 2rem; }

.ml2 {
  margin-left: 2rem; }

.m3 {
  margin: 3rem; }

.mt3 {
  margin-top: 3rem; }

.mr3 {
  margin-right: 3rem; }

.mb3 {
  margin-bottom: 3rem; }

.ml3 {
  margin-left: 3rem; }

.m4 {
  margin: 4rem; }

.mt4 {
  margin-top: 4rem; }

.mr4 {
  margin-right: 4rem; }

.mb4 {
  margin-bottom: 4rem; }

.ml4 {
  margin-left: 4rem; }

.mxa {
  margin-right: auto;
  margin-left: auto; }

.p1 {
  padding: 1rem; }

.px1 {
  padding-right: 1rem;
  padding-left: 1rem; }

.py1 {
  padding-top: 1rem;
  padding-bottom: 1rem; }

.p2 {
  padding: 2rem; }

.px2 {
  padding-right: 2rem;
  padding-left: 2rem; }

.py2 {
  padding-top: 2rem;
  padding-bottom: 2rem; }

.p3 {
  padding: 3rem; }

.px3 {
  padding-right: 3rem;
  padding-left: 3rem; }

.py3 {
  padding-top: 3rem;
  padding-bottom: 3rem; }

.p4 {
  padding: 4rem; }

.px4 {
  padding-right: 4rem;
  padding-left: 4rem; }

.py4 {
  padding-top: 4rem;
  padding-bottom: 4rem; }

.inline {
  display: inline; }

.block {
  display: block; }

.inline-block {
  display: inline-block; }

.clearfix {
  overflow: hidden; }

.left {
  float: left; }

.right {
  float: right; }

.fit {
  max-width: 100%; }

/**
 * Your Crap
 */
.measure {
  max-width: 48rem; }

.relative {
  position: relative; }

.absolute {
  position: absolute; }

.absolute-center {
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: auto;
  display: table; }

.full-width {
  width: 100%; }

header nav:after, .post:after {
  display: block;
  content: '----------';
  margin: 80px 0;
  color: #ccc; }

p {
  padding-bottom: 1rem; }

img {
  max-width: 100%; }

.cf:after, .nav:after {
  content: "";
  display: table;
  clear: both; }

.nav {
  list-style: none;
  margin-left: 0; }
  .nav > li,
  .nav > li > a {
    display: inline-block;
    *display: inline;
    zoom: 1; }

.nav--banner {
  text-align: center; }

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

.hll {
  background-color: #333333; }

.c {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment */
.err {
  color: white; }

/* Error */
.g {
  color: white; }

/* Generic */
.k {
  color: #fb660a;
  font-weight: bold; }

/* Keyword */
.l {
  color: white; }

/* Literal */
.n {
  color: white; }

/* Name */
.o {
  color: white; }

/* Operator */
.x {
  color: white; }

/* Other */
.p {
  color: white; }

/* Punctuation */
.cm {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Multiline */
.cp {
  color: #ff0007;
  font-weight: bold;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Preproc */
.c1 {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Single */
.cs {
  color: #008800;
  font-style: italic;
  background-color: #0f140f; }

/* Comment.Special */
.gd {
  color: white; }

/* Generic.Deleted */
.ge {
  color: white; }

/* Generic.Emph */
.gr {
  color: white; }

/* Generic.Error */
.gh {
  color: #ffffff;
  font-weight: bold; }

/* Generic.Heading */
.gi {
  color: white; }

/* Generic.Inserted */
.go {
  color: #444444;
  background-color: #222222; }

/* Generic.Output */
.gp {
  color: white; }

/* Generic.Prompt */
.gs {
  color: white; }

/* Generic.Strong */
.gu {
  color: #ffffff;
  font-weight: bold; }

/* Generic.Subheading */
.gt {
  color: white; }

/* Generic.Traceback */
.kc {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Constant */
.kd {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Declaration */
.kn {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Namespace */
.kp {
  color: #fb660a; }

/* Keyword.Pseudo */
.kr {
  color: #fb660a;
  font-weight: bold; }

/* Keyword.Reserved */
.kt {
  color: #cdcaa9;
  font-weight: bold; }

/* Keyword.Type */
.ld {
  color: white; }

/* Literal.Date */
.m {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number */
.s {
  color: #0086d2; }

/* Literal.String */
.na {
  color: #ff0086;
  font-weight: bold; }

/* Name.Attribute */
.nb {
  color: white; }

/* Name.Builtin */
.nc {
  color: white; }

/* Name.Class */
.no {
  color: #0086d2; }

/* Name.Constant */
.nd {
  color: white; }

/* Name.Decorator */
.ni {
  color: white; }

/* Name.Entity */
.ne {
  color: white; }

/* Name.Exception */
.nf {
  color: #ff0086;
  font-weight: bold; }

/* Name.Function */
.nl {
  color: white; }

/* Name.Label */
.nn {
  color: white; }

/* Name.Namespace */
.nx {
  color: white; }

/* Name.Other */
.py {
  color: white; }

/* Name.Property */
.nt {
  color: #fb660a;
  font-weight: bold; }

/* Name.Tag */
.nv {
  color: #fb660a; }

/* Name.Variable */
.ow {
  color: white; }

/* Operator.Word */
.w {
  color: #888888; }

/* Text.Whitespace */
.mf {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Float */
.mh {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Hex */
.mi {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Integer */
.mo {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Oct */
.sb {
  color: #0086d2; }

/* Literal.String.Backtick */
.sc {
  color: #0086d2; }

/* Literal.String.Char */
.sd {
  color: #0086d2; }

/* Literal.String.Doc */
.s2 {
  color: #0086d2; }

/* Literal.String.Double */
.se {
  color: #0086d2; }

/* Literal.String.Escape */
.sh {
  color: #0086d2; }

/* Literal.String.Heredoc */
.si {
  color: #0086d2; }

/* Literal.String.Interpol */
.sx {
  color: #0086d2; }

/* Literal.String.Other */
.sr {
  color: #0086d2; }

/* Literal.String.Regex */
.s1 {
  color: #0086d2; }

/* Literal.String.Single */
.ss {
  color: #0086d2; }

/* Literal.String.Symbol */
.bp {
  color: white; }

/* Name.Builtin.Pseudo */
.vc {
  color: #fb660a; }

/* Name.Variable.Class */
.vg {
  color: #fb660a; }

/* Name.Variable.Global */
.vi {
  color: #fb660a; }

/* Name.Variable.Instance */
.il {
  color: #0086f7;
  font-weight: bold; }

/* Literal.Number.Integer.Long */

/*# sourceMappingURL=shelter.css.map */